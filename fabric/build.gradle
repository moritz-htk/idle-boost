plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "me.shedaniel.unified-publishing" version "0.1.12"
}

base {
    archivesName = archives_base_name + "-fabric"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    modApi "dev.architectury:architectury-fabric:${architectury_api_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"
    modApi "com.terraformersmc:modmenu:${mod_menu_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "architectury.common.json"
    exclude ".cache/**"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

unifiedPublishing {
    project {
        displayName = "[Fabric ${project.minecraft_version}] Idle Boost ${project.version}"
        version = "${project.version}"
        releaseType = "release"
        gameVersions = ["${project.minecraft_version}"]
        gameLoaders = ["fabric"]
        changelog = project(":").file("changelog.md").text

        mainPublication tasks.remapJar

        relations {
            depends {
                curseforge = "architectury-api"
                modrinth = "architectury-api"
                curseforge = "cloth-config"
                modrinth = "cloth-config"
            }
            optional {
                curseforge = "modmenu"
                modrinth = "modmenu"
            }
        }

        if (curseforgeApiKey != null) {
            curseforge {
                token = curseforgeApiKey
                id = "1054545"
            }
        }

        if (modrinthApiKey != null) {
            modrinth {
                token = modrinthApiKey
                id = "REC6ythZ"
            }
        }
    }
}