plugins {
    id 'dev.architectury.loom' version '1.9-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'me.shedaniel.unified-publishing' version '0.1.13' apply false
}

def localPropertiesFile = file('local.properties')
if (localPropertiesFile.exists()) {
    Properties localProperties = new Properties()
    localPropertiesFile.withInputStream {
        stream -> localProperties.load(stream)
    }
    localProperties.each {
        key, value -> project.ext.set(key, value)
    }
} else {
    project.ext.set('curseforgeApiKey', System.getenv('CURSEFORGE_API_KEY') ?: '')
    project.ext.set('modrinthApiKey', System.getenv('MODRINTH_API_KEY') ?: '')
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = project.mod_group
    version = project.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'

    base {
        archivesName = "${project.mod_id}-${project.name}"
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings loom.officialMojangMappings()
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
            options.release = 21
        }
    }
}